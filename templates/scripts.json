{
  "analyze": "cross-env ANALYZE=1 umi build",
  "build": "APP=1 ENV=$env CID=$cid umi build",
  "dev": "npm run start:dev",
  "postinstall": "umi g tmp",
  "lint": "umi g tmp && npm run lint:js && npm run lint:style && npm run lint:prettier",
  "lint-staged": "lint-staged",
  "lint-staged:js": "tsc & eslint --ext .js,.jsx,.ts,.tsx",
  "lint:fix": "eslint --fix --cache --ext .js,.jsx,.ts,.tsx --format=pretty ./src && npm run lint:style",
  "lint:js": "eslint --cache --ext .js,.jsx,.ts,.tsx --format=pretty ./src",
  "lint:prettier": "prettier --check \"src/**/*.tsx\" \"src/**/*.less\" --end-of-line auto",
  "lint:style": "stylelint --fix \"src/**/*.less\" --syntax less",
  "prettier": "prettier -c --write \"**/*\"",
  "start": "cross-env CID=id APP=1 npm run dev",
  "start:dev": "npm run whistle:no-mock && cross-env REACT_APP_ENV=dev MOCK=none umi dev",
  "start:test": "npm run whistle && cross-env REACT_APP_ENV=test MOCK=none umi dev",
  "start:no-mock": "npm run whistle:no-mock && cross-env MOCK=none umi dev",
  "test": "umi test --passWithNoTests",
  "tsc": "umi g tmp && tsc",
  "pre-commit": "npm run lint-staged",
  "lint-tsc-test": "concurrently --kill-others-on-fail \"npm run lint\" \"npm run tsc\" \"npm run test\""
}
